# This is a TOML config file.
# For more information, see https://github.com/toml-lang/toml

# NOTE: Any path below can be absolute (e.g. "/var/myawesomeapp/data") or
# relative to the home directory (e.g. "data"). The home directory is
# "$HOME/.tendermint" by default, but could be changed via $TMHOME env variable
# or --home cmd flag.

#######################################################################
###                   Main Base Config Options                      ###
#######################################################################

# TCP or UNIX socket address of the ABCI application,
# or the name of an ABCI application compiled in with the Tendermint binary
proxy_app = "tcp://127.0.0.1:26658"

# A custom human readable name for this node
moniker = "Synergy_Nodes"

# If this node is many blocks behind the tip of the chain, FastSync
# allows them to catchup quickly by downloading blocks in parallel
# and verifying their commits
fast_sync = true

# Database backend: goleveldb | cleveldb | boltdb | rocksdb | badgerdb
# * goleveldb (github.com/syndtr/goleveldb - most popular implementation)
#   - pure go
#   - stable
# * cleveldb (uses levigo wrapper)
#   - fast
#   - requires gcc
#   - use cleveldb build tag (go build -tags cleveldb)
# * boltdb (uses etcd's fork of bolt - github.com/etcd-io/bbolt)
#   - EXPERIMENTAL
#   - may be faster is some use-cases (random reads - indexer)
#   - use boltdb build tag (go build -tags boltdb)
# * rocksdb (uses github.com/tecbot/gorocksdb)
#   - EXPERIMENTAL
#   - requires gcc
#   - use rocksdb build tag (go build -tags rocksdb)
# * badgerdb (uses github.com/dgraph-io/badger)
#   - EXPERIMENTAL
#   - use badgerdb build tag (go build -tags badgerdb)
db_backend = "goleveldb"

# Database directory
db_dir = "data"

# Output level for logging, including package level options
log_level = "info"

# Output format: 'plain' (colored text) or 'json'
log_format = "plain"

##### additional base config options #####

# Path to the JSON file containing the initial validator set and other meta data
genesis_file = "config/genesis.json"

# Path to the JSON file containing the private key to use as a validator in the consensus protocol
priv_validator_key_file = "config/priv_validator_key.json"

# Path to the JSON file containing the last sign state of a validator
priv_validator_state_file = "data/priv_validator_state.json"

# TCP or UNIX socket address for Tendermint to listen on for
# connections from an external PrivValidator process
priv_validator_laddr = ""

# Path to the JSON file containing the private key to use for node authentication in the p2p protocol
node_key_file = "config/node_key.json"

# Mechanism to connect to the ABCI application: socket | grpc
abci = "socket"

# If true, query the ABCI app on connecting to a new peer
# so the app can decide if we should keep the connection or not
filter_peers = false


#######################################################################
###                 Advanced Configuration Options                  ###
#######################################################################

#######################################################
###       RPC Server Configuration Options          ###
#######################################################
[rpc]

# TCP or UNIX socket address for the RPC server to listen on
laddr = "tcp://0.0.0.0:26657"

# A list of origins a cross-domain request can be executed from
# Default value '[]' disables cors support
# Use '["*"]' to allow any origin
cors_allowed_origins = []

# A list of methods the client is allowed to use with cross-domain requests
cors_allowed_methods = ["HEAD", "GET", "POST", ]

# A list of non simple headers the client is allowed to use with cross-domain requests
cors_allowed_headers = ["Origin", "Accept", "Content-Type", "X-Requested-With", "X-Server-Time", ]

# TCP or UNIX socket address for the gRPC server to listen on
# NOTE: This server only supports /broadcast_tx_commit
grpc_laddr = ""

# Maximum number of simultaneous connections.
# Does not include RPC (HTTP&WebSocket) connections. See max_open_connections
# If you want to accept a larger number than the default, make sure
# you increase your OS limits.
# 0 - unlimited.
# Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
# 1024 - 40 - 10 - 50 = 924 = ~900
grpc_max_open_connections = 900

# Activate unsafe RPC commands like /dial_seeds and /unsafe_flush_mempool
unsafe = false

# Maximum number of simultaneous connections (including WebSocket).
# Does not include gRPC connections. See grpc_max_open_connections
# If you want to accept a larger number than the default, make sure
# you increase your OS limits.
# 0 - unlimited.
# Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
# 1024 - 40 - 10 - 50 = 924 = ~900
max_open_connections = 900

# Maximum number of unique clientIDs that can /subscribe
# If you're using /broadcast_tx_commit, set to the estimated maximum number
# of broadcast_tx_commit calls per block.
max_subscription_clients = 100

# Maximum number of unique queries a given client can /subscribe to
# If you're using GRPC (or Local RPC client) and /broadcast_tx_commit, set to
# the estimated # maximum number of broadcast_tx_commit calls per block.
max_subscriptions_per_client = 5

# Experimental parameter to specify the maximum number of events a node will
# buffer, per subscription, before returning an error and closing the
# subscription. Must be set to at least 100, but higher values will accommodate
# higher event throughput rates (and will use more memory).
experimental_subscription_buffer_size = 200

# Experimental parameter to specify the maximum number of RPC responses that
# can be buffered per WebSocket client. If clients cannot read from the
# WebSocket endpoint fast enough, they will be disconnected, so increasing this
# parameter may reduce the chances of them being disconnected (but will cause
# the node to use more memory).
#
# Must be at least the same as "experimental_subscription_buffer_size",
# otherwise connections could be dropped unnecessarily. This value should
# ideally be somewhat higher than "experimental_subscription_buffer_size" to
# accommodate non-subscription-related RPC responses.
experimental_websocket_write_buffer_size = 200

# If a WebSocket client cannot read fast enough, at present we may
# silently drop events instead of generating an error or disconnecting the
# client.
#
# Enabling this experimental parameter will cause the WebSocket connection to
# be closed instead if it cannot read fast enough, allowing for greater
# predictability in subscription behaviour.
experimental_close_on_slow_client = false

# How long to wait for a tx to be committed during /broadcast_tx_commit.
# WARNING: Using a value larger than 10s will result in increasing the
# global HTTP write timeout, which applies to all connections and endpoints.
# See https://github.com/tendermint/tendermint/issues/3435
timeout_broadcast_tx_commit = "10s"

# Maximum size of request body, in bytes
max_body_bytes = 1000000

# Maximum size of request header, in bytes
max_header_bytes = 1048576

# The path to a file containing certificate that is used to create the HTTPS server.
# Might be either absolute path or path related to Tendermint's config directory.
# If the certificate is signed by a certificate authority,
# the certFile should be the concatenation of the server's certificate, any intermediates,
# and the CA's certificate.
# NOTE: both tls_cert_file and tls_key_file must be present for Tendermint to create HTTPS server.
# Otherwise, HTTP server is run.
tls_cert_file = ""

# The path to a file containing matching private key that is used to create the HTTPS server.
# Might be either absolute path or path related to Tendermint's config directory.
# NOTE: both tls-cert-file and tls-key-file must be present for Tendermint to create HTTPS server.
# Otherwise, HTTP server is run.
tls_key_file = ""

# pprof listen address (https://golang.org/pkg/net/http/pprof)
pprof_laddr = "localhost:6060"

#######################################################
###           P2P Configuration Options             ###
#######################################################
[p2p]

# Address to listen for incoming connections
laddr = "tcp://0.0.0.0:26656"

# Address to advertise to peers for them to dial
# If empty, will use the same port as the laddr,
# and will introspect on the listener or use UPnP
# to figure out the address. ip and port are required
# example: 159.89.10.97:26656
external_address = ""

# Comma separated list of seed nodes to connect to
seeds = "ade4d8bc8cbe014af6ebdf3cb7b1e9ad36f412c0@seeds.polkachu.com:12256"

# Comma separated list of nodes to keep persistent connections to
persistent_peers = "c427e6b2b9ae3c58f3578c5bad398a469ed3c903@65.108.142.47:36656,b1c9d2f2627bc2d2a0a857e408cdcc44f56c5d5b@65.108.206.56:16656,5b193f60f2b8378c42d7d30bd70d45de2b70730e@65.108.202.143:16656,cbbc8c1c9da23b71ccd2138fbf41bb710afe44b1@65.21.170.3:28656,0e67ce079f4e26ad5d22d7b1ba61e7df214d626c@65.108.101.50:60556,9ee75491e354965d8bfd8434aa093f8613bc1dce@65.108.238.103:12256,74b693b1b0745d250becfbdb550d36504e03bf92@93.115.25.15:26656,67e90a4956250adf62a2e257f569d80907d11d86@141.95.103.115:26656,f02b8862ab5a9add71148340cc28d765fba8069a@138.201.220.51:26666,ea30fb0d90563efd98131d7778e7a53d0e9ad633@116.202.236.115:21016,84ff28824a911409e2c24f2f5ede87ae1b859b5f@5.9.147.22:26156,d056dcd5ac8dddb23e2962a5ade6ee51f9bfd785@162.19.89.8:10456,97e90b4d658dc7b10c05e387b1384f6670f64943@83.136.249.85:26656,dc9241e56b67b2d9b39a79f4aa9dc432d78c1dbc@195.3.223.204:10156,6a1087004245692128a6ad11b812bb3640955b86@162.55.235.69:25656,8cddcfa2ebcd25df7116f18bdbb0b22ae41392a6@65.108.193.133:16656,a757fc9ea95a7f643d392ec9fdaa31cbf06e76d9@195.3.221.21:12256,04ea9eceee16db90872fee3fbef9ac50a87702c5@185.248.24.29:26656,ec4f27b82691f44d38b4801889b3b92643bdc5c2@185.144.99.234:26656,dfc62810eeaab86587b2975c79f3c12d4830652d@15.235.114.54:26656,b549e0f88cbebe6cfd3f772937a70640b950fd98@66.172.36.133:28656,f400b2b2665c62d3ba64a940a4c08a7db874ff6a@34.94.25.244:26656,cfd27429d382ecf366ddad02c88f15a8753092c8@66.172.36.135:28656,cb0b38aa612e8ac05f704d9b2feb7526607afb77@159.203.191.62:26656,e0b4c670b35cc0cf16b570ea3397a5f785c9d1b6@65.109.48.57:26656,a83cd29f4f9a4711346184966f9fb6c80bb658d2@65.108.103.184:21656,9063fce4a1fc50185b2cafd56bc8176a45072c09@57.128.133.23:26656,e1e23e16a1c75c558fcff844699f976eed6dec5f@194.163.132.150:16656,9731222819ddacf2b0238e51527aa95156a04b06@57.128.133.22:26656,64920ef07c20c22f26a2164ceae2aac60ec2840d@95.216.73.250:26656,a63421772de24812d62a842ffb40cd93946ab1df@194.163.136.90:26656,061dcf3318978ac0448e848507c0b51bfa706b6d@35.193.224.120:26656,d3cee85a10d72b6f4eb40f544323acd104b29c23@51.68.44.219:23856,f93ce5616f45d6c20d061302519a5c2420e3475d@135.125.5.31:54356,64be41ff925b32a81cfb13a81fd4847aef2524aa@34.72.49.125:26656,f5732d5a406bdbbf08acad017c0993c0aa8ebe70@35.247.108.210:26656,ad6700400ff6a76b442e96e772e1f1d641bd3560@34.172.46.68:26656,27e3200f2b3f83c403ad9dfa09bf83ae73b179b3@149.102.143.220:10173,99237ee23683d1bf4cb426a7042793464d8f5401@128.199.15.159:31437,7ef5ff00fe94933b8ba4b7ae4a8632ece5db11df@104.198.4.170:26656,1f78bdc1c2e2268185dac25fa076f743d8bbd154@95.217.109.143:56656,71082b73b93979f772b6e53bd700ca13cb69b847@162.251.235.253:26656,91e2689222d249c2e5edc5e84612acb37de955d7@65.144.145.234:26656,4b177aeb56846ef7b56b0078c09e6b326276880e@34.135.162.111:26656,9c69539f7d6db4f5637c64a1552677fcd0c83c7d@34.170.162.50:26656,96f8656af3a669bd0981823bf2cd38be801977b2@65.108.9.25:16656,20f56a68a04eedc764b7e1b87b7032a50b9d4fe9@51.81.155.97:10456,1d6ea027efc5025146c84f52294cd0b44ab25cdc@167.235.138.94:26656,d88e3dd9d94dcb32d908a5d5fa19682dffcd52a5@146.59.47.210:26656,189d892ad5d7991dd38a1dfcf830726fbb699cf9@88.99.94.122:26666,1ec2a654e00e22279ee50f13f074f2bce7218681@15.235.114.194:10156,edb5e5a80654041e2a6e83852b75f8325e88bfd2@34.71.129.146:26656,402a88e10c202d93e4723aa2c1f78a443d942a0d@65.21.95.180:36656,607a6fd540bd1983cb83e4a8b5d4adc854366875@212.23.222.82:26656,59a13b0e8ce91c6d507b06c09b0ed44a1574cad3@54.177.215.240:26656,609251c15cd2330f13436a23cb185d7f50aac707@34.171.123.54:26656,2dc710a07b9884ddc0ef4c1105bef3bfa45f87ec@116.203.60.232:16656,7e0a230dfbecb877f05fe9f1dde6c91d3b633c43@95.216.142.94:26656,1387946c04bceb472113f657f55f670f71709230@65.108.4.188:12256,0b551e21f06a55db7644386167f29641a29f1ed7@185.252.232.110:36656,6436bc36411be81644188673937f1fbee398448c@65.108.141.226:26656,05c410efdebfc0638c868dc0d6f9154168d57604@146.19.24.101:26646,2254e6968e5c7ebc98ef5b79b388502fa44e10e1@5.161.134.44:26656,ea6a7b2f366bc343f0670f1673fd86001dd08eb0@65.108.122.246:26636,fbebe11a12def69c115c25b4bf871bc5976dfe50@65.109.59.118:26656,ede57d0b0373d95666626f259aa4f030d6660a57@65.109.49.163:36656,b5f9fa874781f975687018ae559f0d952d3a2e24@52.52.208.179:26656,076e97f47762a477f2ae3dd3e798a7970b6bb20d@52.52.110.228:26656,741fb30c627ad944b2553512171fbbb4138110c5@65.108.123.244:25656,ef62c7e1bb793ef03481f71697be5ff28e191405@65.108.43.116:56136,abbbbc191bfcddb0462fb9ceeee90185af8b8cd7@141.95.171.41:46656,689bbb368fc3a7222a60091700af15d5e9af3388@77.52.182.194:26656,722884e3add85791c34a0563253dc47901320878@65.108.238.61:36656,c484f998e1a9e464a68af04d8d15d6fb0aeceb1e@65.21.129.95:26656,bf9168fbcc7250c7c5b9d8080cd4eeee6e399913@139.162.242.71:26886,ebc272824924ea1a27ea3183dd0b9ba713494f83@185.16.39.158:26886,5676fee42425893f90d0724994661d172230587a@188.165.252.51:26656,f0aa82d5f0b62b8f251a6e474340cd78809d2944@65.109.55.186:16656,d248bb8274ee50e38b4c558e1190b6d35a6edc87@136.243.111.31:26656,b42011f01bd3987a0eb38092cbcfb44a8e4dc7f1@185.248.24.16:16656,8d7d0f32d53467c4d5e8871faf4ec58ea970fed2@157.90.179.182:26456,03ea9949005f23540a66cc54b0b4ac4e7832e8a6@65.109.53.244:16656,55e62732b4a122567441c05b73c147e8a2afee35@216.202.234.76:26656,4d44c8d6cd2dc2fae0b607c380b040b3651e81d6@95.214.53.27:12256,e821acdaf0c7a3c60ea3cd4eb4a98a62dad06f58@43.201.12.41:26656,2f02a4012f90f5d1a9a85748dd9aa14155ed4a71@66.172.36.134:28656,df7ea6950a4a58199ba03ba9454ded0d51f38003@93.147.113.43:26656,c772d6c7ef54aa91ef604e2222270c5622cae2c4@49.12.203.138:16656,5c86d4e37dd7bf8f5d4de300f64ce2ef7c9fcfab@135.181.176.109:14656,23180f90318d0003a4e8140a1e67407bf874d69d@78.107.234.44:25656,0108a0ea6e5a23019bd351901ffc1b0de76cc885@65.109.28.224:14656,63722a9aed0225d7a5f6a49d1c53b5c979137b13@74.96.207.62:26656,8df658cd50f0488d2967340dff07732a30ac9301@178.211.139.224:26776,98004cf40a82aa7015d5f4fba75564201e62de26@141.95.124.151:21016"

# UPNP port forwarding
upnp = false

# Path to address book
addr_book_file = "config/addrbook.json"

# Set true for strict address routability rules
# Set false for private or local networks
addr_book_strict = true

# Maximum number of inbound peers
max_num_inbound_peers = 40

# Maximum number of outbound peers to connect to, excluding persistent peers
max_num_outbound_peers = 10

# List of node IDs, to which a connection will be (re)established ignoring any existing limits
unconditional_peer_ids = ""

# Maximum pause when redialing a persistent peer (if zero, exponential backoff is used)
persistent_peers_max_dial_period = "0s"

# Time to wait before flushing messages out on the connection
flush_throttle_timeout = "100ms"

# Maximum size of a message packet payload, in bytes
max_packet_msg_payload_size = 1024

# Rate at which packets can be sent, in bytes/second
send_rate = 5120000

# Rate at which packets can be received, in bytes/second
recv_rate = 5120000

# Set true to enable the peer-exchange reactor
pex = true

# Seed mode, in which node constantly crawls the network and looks for
# peers. If another node asks it for addresses, it responds and disconnects.
#
# Does not work if the peer-exchange reactor is disabled.
seed_mode = false

# Comma separated list of peer IDs to keep private (will not be gossiped to other peers)
private_peer_ids = ""

# Toggle to disable guard against peers connecting from the same ip.
allow_duplicate_ip = false

# Peer connection configuration.
handshake_timeout = "20s"
dial_timeout = "3s"

#######################################################
###          Mempool Configuration Option          ###
#######################################################
[mempool]

recheck = true
broadcast = true
wal_dir = ""

# Maximum number of transactions in the mempool
size = 5000

# Limit the total size of all txs in the mempool.
# This only accounts for raw transactions (e.g. given 1MB transactions and
# max_txs_bytes=5MB, mempool will only accept 5 transactions).
max_txs_bytes = 1073741824

# Size of the cache (used to filter transactions we saw earlier) in transactions
cache_size = 10000

# Do not remove invalid transactions from the cache (default: false)
# Set to true if it's not possible for any invalid transaction to become valid
# again in the future.
keep-invalid-txs-in-cache = false

# Maximum size of a single transaction.
# NOTE: the max size of a tx transmitted over the network is {max_tx_bytes}.
max_tx_bytes = 1048576

# Maximum size of a batch of transactions to send to a peer
# Including space needed by encoding (one varint per transaction).
# XXX: Unused due to https://github.com/tendermint/tendermint/issues/5796
max_batch_bytes = 0

#######################################################
###         State Sync Configuration Options        ###
#######################################################
[statesync]
# State sync rapidly bootstraps a new node by discovering, fetching, and restoring a state machine
# snapshot from peers instead of fetching and replaying historical blocks. Requires some peers in
# the network to take and serve state machine snapshots. State sync is not attempted if the node
# has any local state (LastBlockHeight > 0). The node will have a truncated block history,
# starting from the height of the snapshot.
enable = false

# RPC servers (comma-separated) for light client verification of the synced state machine and
# retrieval of state data for node bootstrapping. Also needs a trusted height and corresponding
# header hash obtained from a trusted source, and a period during which validators can be trusted.
#
# For Cosmos SDK-based chains, trust_period should usually be about 2/3 of the unbonding time (~2
# weeks) during which they can be financially punished (slashed) for misbehavior.
rpc_servers = ""
trust_height = 0
trust_hash = ""
trust_period = "168h0m0s"

# Time to spend discovering snapshots before initiating a restore.
discovery_time = "15s"

# Temporary directory for state sync snapshot chunks, defaults to the OS tempdir (typically /tmp).
# Will create a new, randomly named directory within, and remove it when done.
temp_dir = ""

# The timeout duration before re-requesting a chunk, possibly from a different
# peer (default: 1 minute).
chunk_request_timeout = "10s"

# The number of concurrent chunk fetchers to run (default: 1).
chunk_fetchers = "4"

#######################################################
###       Fast Sync Configuration Connections       ###
#######################################################
[fastsync]

# Fast Sync version to use:
#   1) "v0" (default) - the legacy fast sync implementation
#   2) "v1" - refactor of v0 version for better testability
#   2) "v2" - complete redesign of v0, optimized for testability & readability
version = "v0"

#######################################################
###         Consensus Configuration Options         ###
#######################################################
[consensus]

wal_file = "data/cs.wal/wal"

# How long we wait for a proposal block before prevoting nil
timeout_propose = "3s"
# How much timeout_propose increases with each round
timeout_propose_delta = "500ms"
# How long we wait after receiving +2/3 prevotes for “anything” (ie. not a single block or nil)
timeout_prevote = "1s"
# How much the timeout_prevote increases with each round
timeout_prevote_delta = "500ms"
# How long we wait after receiving +2/3 precommits for “anything” (ie. not a single block or nil)
timeout_precommit = "1s"
# How much the timeout_precommit increases with each round
timeout_precommit_delta = "500ms"
# How long we wait after committing a block, before starting on the new
# height (this gives us a chance to receive some more precommits, even
# though we already have +2/3).
timeout_commit = "5s"

# How many blocks to look back to check existence of the node's consensus votes before joining consensus
# When non-zero, the node will panic upon restart
# if the same consensus key was used to sign {double_sign_check_height} last blocks.
# So, validators should stop the state machine, wait for some blocks, and then restart the state machine to avoid panic.
double_sign_check_height = 0

# Make progress as soon as we have all the precommits (as if TimeoutCommit = 0)
skip_timeout_commit = false

# EmptyBlocks mode and possible interval between empty blocks
create_empty_blocks = true
create_empty_blocks_interval = "0s"

# Reactor sleep duration parameters
peer_gossip_sleep_duration = "100ms"
peer_query_maj23_sleep_duration = "2s"

#######################################################
###   Transaction Indexer Configuration Options     ###
#######################################################
[tx_index]

# What indexer to use for transactions
#
# The application will set which txs to index. In some cases a node operator will be able
# to decide which txs to index based on configuration set in the application.
#
# Options:
#   1) "null"
#   2) "kv" (default) - the simplest possible indexer, backed by key-value storage (defaults to levelDB; see DBBackend).
# 		- When "kv" is chosen "tx.height" and "tx.hash" will always be indexed.
indexer = "kv"

#######################################################
###       Instrumentation Configuration Options     ###
#######################################################
[instrumentation]

# When true, Prometheus metrics are served under /metrics on
# PrometheusListenAddr.
# Check out the documentation for the list of available metrics.
prometheus = false

# Address to listen for Prometheus collector(s) connections
prometheus_listen_addr = ":26660"

# Maximum number of simultaneous connections.
# If you want to accept a larger number than the default, make sure
# you increase your OS limits.
# 0 - unlimited.
max_open_connections = 3

# Instrumentation namespace
namespace = "tendermint"
